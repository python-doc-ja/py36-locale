# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: cocoatomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/marshal.rst:2
msgid ":mod:`marshal` --- Internal Python object serialization"
msgstr ":mod:`marshal` --- 内部使用向けの Python オブジェクト整列化"

#: ../../library/marshal.rst:10
msgid ""
"This module contains functions that can read and write Python values in a "
"binary format.  The format is specific to Python, but independent of machine"
" architecture issues (e.g., you can write a Python value to a file on a PC, "
"transport the file to a Sun, and read it back there).  Details of the format"
" are undocumented on purpose; it may change between Python versions "
"(although it rarely does). [#]_"
msgstr ""
"このモジュールには Python 値をバイナリ形式で読み書きできるような関数が含まれています。このバイナリ形式は Python "
"特有のものですが、マシンアーキテクチャ非依存のものです (つまり、Python の値を PC 上でファイルに書き込み、Sun "
"に転送し、そこで読み戻すことができます)。バイナリ形式の詳細は意図的にドキュメント化されていません; この形式は (稀にしかないことですが) "
"Python のバージョン間で変更される可能性があるからです。[#]_"

#: ../../library/marshal.rst:21
msgid ""
"This is not a general \"persistence\" module.  For general persistence and "
"transfer of Python objects through RPC calls, see the modules :mod:`pickle` "
"and :mod:`shelve`.  The :mod:`marshal` module exists mainly to support "
"reading and writing the \"pseudo-compiled\" code for Python modules of "
":file:`.pyc` files. Therefore, the Python maintainers reserve the right to "
"modify the marshal format in backward incompatible ways should the need "
"arise.  If you're serializing and de-serializing Python objects, use the "
":mod:`pickle` module instead -- the performance is comparable, version "
"independence is guaranteed, and pickle supports a substantially wider range "
"of objects than marshal."
msgstr ""
"このモジュールは汎用の \"永続化 (persistence)\" モジュールではありません。汎用的な永続化や、RPC 呼び出しを通じた Python "
"オブジェクトの転送については、モジュール :mod:`pickle` および :mod:`shelve` を参照してください。 "
":mod:`marshal` モジュールは主に、 \"擬似コンパイルされた (pseudo-compiled)\" コードの :file:`.pyc` "
"ファイルへの読み書きをサポートするために存在します。したがって、 Python のメンテナンス担当者は、必要が生じれば marshal "
"形式を後方互換性のないものに変更する権利を有しています。 Python オブジェクトを直列化 (シリアライズ) および非直列化 (デシリアライズ) "
"する場合には、 :mod:`pickle` モジュールを使ってください。 :mod:`pickle` "
"は速度は同等で、バージョン間の互換性が保証されていて、 marshal より広範囲のオブジェクトをサポートしています。"

#: ../../library/marshal.rst:33
msgid ""
"The :mod:`marshal` module is not intended to be secure against erroneous or "
"maliciously constructed data.  Never unmarshal data received from an "
"untrusted or unauthenticated source."
msgstr ""
":mod:`marshal` "
"モジュールは、誤ったデータや悪意を持って作成されたデータに対する安全性を考慮していません。信頼できない、もしくは認証されていない出所からのデータを非整列化してはなりません。"

#: ../../library/marshal.rst:39
msgid ""
"Not all Python object types are supported; in general, only objects whose "
"value is independent from a particular invocation of Python can be written "
"and read by this module.  The following types are supported: booleans, "
"integers, floating point numbers, complex numbers, strings, bytes, "
"bytearrays, tuples, lists, sets, frozensets, dictionaries, and code objects,"
" where it should be understood that tuples, lists, sets, frozensets and "
"dictionaries are only supported as long as the values contained therein are "
"themselves supported.  The singletons :const:`None`, :const:`Ellipsis` and "
":exc:`StopIteration` can also be marshalled and unmarshalled. For format "
"*version* lower than 3, recursive lists, sets and dictionaries cannot be "
"written (see below)."
msgstr ""
"すべての Python "
"オブジェクト型がサポートされているわけではありません。一般に、このモジュールによって読み書きすることができるオブジェクトは、その値が Python "
"の特定の起動に依存していないオブジェクトに限ります。次の型がサポートされています。真偽値、整数、浮動小数点数、複素数、文字列、 byte "
"、bytearray 、タプル、リスト、 set 、frozenset 、辞書、コードオブジェクト。ここで、タプル、リスト、 set 、 "
"frozenset 、辞書は、その中に含まれる値がそれ自身サポートされる場合に限りサポートされます。シングルトン :const:`None` 、 "
":const:`Ellipsis` 、 :exc:`StopIteration` も読み書き (marshalled and unmarshalled)"
" できます。3 未満のフォーマット *version* では、再帰的なリスト、 set 、辞書を書き出すことはできません (下記参照)。"

#: ../../library/marshal.rst:51
msgid ""
"There are functions that read/write files as well as functions operating on "
"bytes-like objects."
msgstr ""

#: ../../library/marshal.rst:54
msgid "The module defines these functions:"
msgstr "このモジュールでは、以下の関数が定義されています。"

#: ../../library/marshal.rst:59
msgid ""
"Write the value on the open file.  The value must be a supported type.  The "
"file must be a writeable :term:`binary file`."
msgstr ""

#: ../../library/marshal.rst:62
msgid ""
"If the value has (or contains an object that has) an unsupported type, a "
":exc:`ValueError` exception is raised --- but garbage data will also be "
"written to the file.  The object will not be properly read back by "
":func:`load`."
msgstr ""
"値 (または値に含まれるオブジェクト) がサポートされていない型の場合、 :exc:`ValueError` 例外が送出されます --- "
"しかし、同時にごみのデータがファイルに書き込まれます。このオブジェクトは :func:`load` で適切に読み出されることはありません。"

#: ../../library/marshal.rst:66
msgid ""
"The *version* argument indicates the data format that ``dump`` should use "
"(see below)."
msgstr "*version* 引数は ``dump`` が使用するデータフォーマットを指定します (下記を参照してください)。"

#: ../../library/marshal.rst:72
msgid ""
"Read one value from the open file and return it.  If no valid value is read "
"(e.g. because the data has a different Python version's incompatible marshal"
" format), raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  The"
" file must be a readable :term:`binary file`."
msgstr ""

#: ../../library/marshal.rst:79
msgid ""
"If an object containing an unsupported type was marshalled with "
":func:`dump`, :func:`load` will substitute ``None`` for the unmarshallable "
"type."
msgstr ""
"サポートされていない型を含むオブジェクトが :func:`dump` で整列化されている場合、 :func:`load` は整列化不能な値を "
"``None`` で置き換えます。"

#: ../../library/marshal.rst:85
msgid ""
"Return the bytes object that would be written to a file by ``dump(value, "
"file)``.  The value must be a supported type.  Raise a :exc:`ValueError` "
"exception if value has (or contains an object that has) an unsupported type."
msgstr ""

#: ../../library/marshal.rst:89
msgid ""
"The *version* argument indicates the data format that ``dumps`` should use "
"(see below)."
msgstr "*version* 引数は ``dumps`` が使用するデータフォーマットを指定します (下記を参照してください)。"

#: ../../library/marshal.rst:95
msgid ""
"Convert the :term:`bytes-like object` to a value.  If no valid value is "
"found, raise :exc:`EOFError`, :exc:`ValueError` or :exc:`TypeError`.  Extra "
"bytes in the input are ignored."
msgstr ""

#: ../../library/marshal.rst:100
msgid "In addition, the following constants are defined:"
msgstr "これに加えて、以下の定数が定義されています:"

#: ../../library/marshal.rst:104
msgid ""
"Indicates the format that the module uses. Version 0 is the historical "
"format, version 1 shares interned strings and version 2 uses a binary format"
" for floating point numbers. Version 3 adds support for object instancing "
"and recursion. The current version is 4."
msgstr ""
"このモジュールが利用するバージョンを表します。バージョン0 は歴史的なフォーマットです。バージョン1 は文字列の再利用をします。バージョン2 "
"は浮動小数点数にバイナリフォーマットを使用します。バージョン3 はオブジェクトのインスタンス化と再帰をサポートします。現在のバージョンは4です。"

#: ../../library/marshal.rst:112
msgid "Footnotes"
msgstr "脚注"

#: ../../library/marshal.rst:113
msgid ""
"The name of this module stems from a bit of terminology used by the "
"designers of Modula-3 (amongst others), who use the term \"marshalling\" for"
" shipping of data around in a self-contained form. Strictly speaking, \"to "
"marshal\" means to convert some data from internal to external form (in an "
"RPC buffer for instance) and \"unmarshalling\" for the reverse process."
msgstr ""
"このモジュールの名前は (特に) Modula-3 の設計者の間で使われていた用語の一つに由来しています。彼らはデータを自己充足的な形式で輸送する操作に"
" \"整列化 (marshalling)\" という用語を使いました。厳密に言えば、\"整列させる (to marshal)\" とは、あるデータを "
"(例えば RPC バッファのように) 内部表現形式から外部表現形式に変換することを意味し、\"非整列化 (unmarshalling)\" "
"とはその逆を意味します。"
