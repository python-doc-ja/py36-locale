# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: cocoatomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/time.rst:2
msgid ":mod:`time` --- Time access and conversions"
msgstr ":mod:`time` --- 時刻データへのアクセスと変換"

#: ../../library/time.rst:9
msgid ""
"This module provides various time-related functions. For related "
"functionality, see also the :mod:`datetime` and :mod:`calendar` modules."
msgstr ""
"このモジュールでは、時刻に関するさまざまな関数を提供します。関連した機能について、:mod:`datetime`, :mod:`calendar` "
"モジュールも参照してください。"

#: ../../library/time.rst:12
msgid ""
"Although this module is always available, not all functions are available on"
" all platforms.  Most of the functions defined in this module call platform "
"C library functions with the same name.  It may sometimes be helpful to "
"consult the platform documentation, because the semantics of these functions"
" varies among platforms."
msgstr ""
"このモジュールは常に利用可能ですが、すべての関数がすべてのプラットフォームで利用可能なわけではありません。このモジュールで定義されているほとんどの関数は、プラットフォーム上の同名の"
" C "
"ライブラリ関数を呼び出します。これらの関数に対する意味付けはプラットフォーム間で異なるため、プラットフォーム提供のドキュメントを読んでおくと便利でしょう。"

#: ../../library/time.rst:18
msgid "An explanation of some terminology and conventions is in order."
msgstr "まずいくつかの用語の説明と慣習について整理します。"

#: ../../library/time.rst:24
msgid ""
"The :dfn:`epoch` is the point where the time starts, and is platform "
"dependent.  For Unix, the epoch is January 1, 1970, 00:00:00 (UTC). To find "
"out what the epoch is on a given platform, look at ``time.gmtime(0)``."
msgstr ""
":dfn:`エポック` (:dfn:`epoch`) は時刻の起点のことで、これはプラットフォーム依存です。\n"
"Unix では、エポックは (UTC で) 1970 年 1 月 1 日 0 時 0 分 0 秒です。\n"
"与えられたプラットフォームでエポックが何なのかを知るには、 ``time.gmtime(0)`` の値を見てください。"

#: ../../library/time.rst:33
msgid ""
"The term :dfn:`seconds since the epoch` refers to the total number of "
"elapsed seconds since the epoch, typically excluding `leap seconds`_.  Leap "
"seconds are excluded from this total on all POSIX-compliant platforms."
msgstr ""
":dfn:`エポック秒` (:dfn:`seconds since the epoch`) は、エポックからの総経過秒数を示していますが、たいていはうるう秒 (`leap seconds`_) は含まれていません。\n"
"全ての POSIX 互換のプラットフォームで、うるう秒はこの総秒数には含まれません。"

#: ../../library/time.rst:40
msgid ""
"The functions in this module may not handle dates and times before the epoch"
" or far in the future.  The cut-off point in the future is determined by the"
" C library; for 32-bit systems, it is typically in 2038."
msgstr ""
"このモジュールの中の関数は、エポック以前あるいは遠い未来の日付や時刻を扱うことができません。将来カットオフ（関数が正しく日付や時刻を扱えなくなる）が起きる時点は、C"
" ライブラリによって決まります。32-bit システムではカットオフは通常 2038 年です。"

#: ../../library/time.rst:50
msgid ""
"**Year 2000 (Y2K) issues**: Python depends on the platform's C library, "
"which generally doesn't have year 2000 issues, since all dates and times are"
" represented internally as seconds since the epoch.  Function "
":func:`strptime` can parse 2-digit years when given ``%y`` format code.  "
"When 2-digit years are parsed, they are converted according to the POSIX and"
" ISO C standards: values 69--99 are mapped to 1969--1999, and values 0--68 "
"are mapped to 2000--2068."
msgstr ""
"**2000年問題 (Y2K)**: Python はプラットフォームの C ライブラリに依存しています。C "
"ライブラリは日付および時刻をエポックからの経過秒で表現するので、一般的に 2000 年問題は存在しません。関数 :func:`strptime` は "
"``%y`` 書式コードが与えられた時に 2 桁の年表記を解析できます。2 桁の年を解析する場合、それらは POSIX および ISO C "
"標準に従って変換されます: 69-99 の西暦年は 1969-1999 となり、0–68 の西暦年は 2000–2068 になります。"

#: ../../library/time.rst:62
msgid ""
"UTC is Coordinated Universal Time (formerly known as Greenwich Mean Time, or"
" GMT).  The acronym UTC is not a mistake but a compromise between English "
"and French."
msgstr ""
"UTC は協定世界時 (Coordinated Universal Time) のことです (以前はグリニッジ標準時または GMT "
"として知られていました)。UTC の頭文字の並びは誤りではなく、英仏の妥協によるものです。"

#: ../../library/time.rst:68
msgid ""
"DST is Daylight Saving Time, an adjustment of the timezone by (usually) one "
"hour during part of the year.  DST rules are magic (determined by local law)"
" and can change from year to year.  The C library has a table containing the"
" local rules (often it is read from a system file for flexibility) and is "
"the only source of True Wisdom in this respect."
msgstr ""
"DST は夏時間 (Daylight Saving Time) のことで、一年のうちの一定期間に 1 時間タイムゾーンを修正することです。DST "
"のルールは不可思議で (地域ごとに法律で定められています)、年ごとに変わることもあります。C ライブラリはローカルルールを記したテーブルを持っており "
"(柔軟に対応するため、たいていはシステムファイルから読み込まれます)、この点に関しては唯一の真実の知識の源です。"

#: ../../library/time.rst:74
msgid ""
"The precision of the various real-time functions may be less than suggested "
"by the units in which their value or argument is expressed. E.g. on most "
"Unix systems, the clock \"ticks\" only 50 or 100 times a second."
msgstr ""
"多くの現時刻を返す関数 (real-time functions) "
"の精度は、値や引数を表現するために使う単位から想像されるよりも低いかも知れません。例えば、ほとんどの Unix システムにおいて、クロックの 1 "
"ティックの精度は 50 から 100 分の 1 秒に過ぎません。"

#: ../../library/time.rst:78
msgid ""
"On the other hand, the precision of :func:`.time` and :func:`sleep` is "
"better than their Unix equivalents: times are expressed as floating point "
"numbers, :func:`.time` returns the most accurate time available (using Unix "
":c:func:`gettimeofday` where available), and :func:`sleep` will accept a "
"time with a nonzero fraction (Unix :c:func:`select` is used to implement "
"this, where available)."
msgstr ""
"一方、:func:`.time` および :func:`sleep` は Unix "
"の同等の関数よりましな精度を持っています。時刻は浮動小数点数で表され、:func:`.time` は可能なかぎり最も正確な時刻を (Unix の "
":c:func:`gettimeofday` があればそれを使って) 返します。また :func:`sleep` "
"にはゼロでない端数を与えることができます (Unix の :c:func:`select` があれば、それを使って実装しています)。"

#: ../../library/time.rst:85
msgid ""
"The time value as returned by :func:`gmtime`, :func:`localtime`, and "
":func:`strptime`, and accepted by :func:`asctime`, :func:`mktime` and "
":func:`strftime`, is a sequence of 9 integers.  The return values of "
":func:`gmtime`, :func:`localtime`, and :func:`strptime` also offer attribute"
" names for individual fields."
msgstr ""
":func:`gmtime`, :func:`localtime`, :func:`strptime` が返す時刻値、および "
":func:`asctime`, :func:`mktime`, :func:`strftime` がとる時刻値は 9 "
"個の整数からなるシーケンスです。:func:`gmtime`, :func:`localtime`, :func:`strptime` "
"の戻り値は個々の値を属性名で取得することもできます。"

#: ../../library/time.rst:91
msgid "See :class:`struct_time` for a description of these objects."
msgstr "これらのオブジェクトについての解説は :class:`struct_time` を参照してください。"

#: ../../library/time.rst:93
msgid ""
"The :class:`struct_time` type was extended to provide the :attr:`tm_gmtoff` "
"and :attr:`tm_zone` attributes when platform supports corresponding ``struct"
" tm`` members."
msgstr ""
":class:`struct_time` オブジェクトは、プラットフォームが、対応する ``struct tm`` "
"メンバーをサポートしている場合、:attr:`tm_gmtoff` および :attr:`tm_zone` 属性が拡張されるようになりました。"

#: ../../library/time.rst:98
msgid ""
"The :class:`struct_time` attributes :attr:`tm_gmtoff` and :attr:`tm_zone` "
"are now available on all platforms."
msgstr ""
":class:`struct_time` の属性 :attr:`tm_gmtoff` および :attr:`tm_zone` "
"が全てのプラットフォームで利用できるようになりました。"

#: ../../library/time.rst:102
msgid "Use the following functions to convert between time representations:"
msgstr "時間の表現を変換するには、以下の関数を利用してください:"

#: ../../library/time.rst:105
msgid "From"
msgstr "対象"

#: ../../library/time.rst:105
msgid "To"
msgstr "変換先"

#: ../../library/time.rst:105
msgid "Use"
msgstr "関数"

#: ../../library/time.rst:107 ../../library/time.rst:110
#: ../../library/time.rst:113 ../../library/time.rst:116
msgid "seconds since the epoch"
msgstr "エポックからの秒数"

#: ../../library/time.rst:107 ../../library/time.rst:113
msgid ":class:`struct_time` in UTC"
msgstr "UTC の :class:`struct_time`"

#: ../../library/time.rst:107
msgid ":func:`gmtime`"
msgstr ":func:`gmtime`"

#: ../../library/time.rst:110 ../../library/time.rst:116
msgid ":class:`struct_time` in local time"
msgstr "ローカル時間の :class:`struct_time`"

#: ../../library/time.rst:110
msgid ":func:`localtime`"
msgstr ":func:`localtime`"

#: ../../library/time.rst:113
msgid ":func:`calendar.timegm`"
msgstr ":func:`calendar.timegm`"

#: ../../library/time.rst:116
msgid ":func:`mktime`"
msgstr ":func:`mktime`"

#: ../../library/time.rst:124
msgid "Functions"
msgstr "関数"

#: ../../library/time.rst:128
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by "
":func:`gmtime` or :func:`localtime` to a string of the following form: "
"``'Sun Jun 20 23:21:05 1993'``.  If *t* is not provided, the current time as"
" returned by :func:`localtime` is used. Locale information is not used by "
":func:`asctime`."
msgstr ""
":func:`gmtime` や :func:`localtime` が返す時刻を表現するタプルまたは :class:`struct_time` "
"を、``'Sun Jun 20 23:21:05 1993'`` といった書式の文字列に変換します。*t* "
"が与えられていない場合には、:func:`localtime` が返す現在の時刻が使われます。:func:`asctime` "
"はロケール情報を使いません。"

#: ../../library/time.rst:136
msgid ""
"Unlike the C function of the same name, :func:`asctime` does not add a "
"trailing newline."
msgstr "同名の C の関数と違って、:func:`asctime` は末尾に改行文字を加えません。"

#: ../../library/time.rst:147
msgid ""
"On Unix, return the current processor time as a floating point number "
"expressed in seconds.  The precision, and in fact the very definition of the"
" meaning of \"processor time\", depends on that of the C function of the "
"same name."
msgstr ""
"Unix では、現在のプロセッサー時間秒を浮動小数点数で返します。時刻の精度および \"プロセッサー時間\" の定義そのものは同じ名前の C "
"関数に依存します。"

#: ../../library/time.rst:151
msgid ""
"On Windows, this function returns wall-clock seconds elapsed since the first"
" call to this function, as a floating point number, based on the Win32 "
"function :c:func:`QueryPerformanceCounter`. The resolution is typically "
"better than one microsecond."
msgstr ""
"Windows では、最初にこの関数が呼び出されてからの経過時間を wall-clock 秒で返します。この関数は Win32 関数 "
":c:func:`QueryPerformanceCounter` に基づいていて、その精度は通常 1 マイクロ秒以下です。"

#: ../../library/time.rst:156
msgid ""
"The behaviour of this function depends on the platform: use "
":func:`perf_counter` or :func:`process_time` instead, depending on your "
"requirements, to have a well defined behaviour."
msgstr ""
"この関数の挙動はプラットフォームに依存します: 必要に応じて挙動が明確に定義されている :func:`perf_counter` または "
":func:`process_time` を使用してください。"

#: ../../library/time.rst:164
msgid ""
"Return the resolution (precision) of the specified clock *clk_id*.  Refer to"
" :ref:`time-clock-id-constants` for a list of accepted values for *clk_id*."
msgstr ""
"指定された *clk_id* クロックの分解能(精度)を返します。 *clk_id* として受け付けられる値の一覧は :ref:`time-clock-"
"id-constants` を参照してください。"

#: ../../library/time.rst:167 ../../library/time.rst:177
#: ../../library/time.rst:187 ../../library/time.rst:551
#: ../../library/time.rst:653 ../../library/time.rst:672
#: ../../library/time.rst:681 ../../library/time.rst:694
msgid "Availability: Unix."
msgstr "利用できる環境 : Unix 。"

#: ../../library/time.rst:174
msgid ""
"Return the time of the specified clock *clk_id*.  Refer to :ref:`time-clock-"
"id-constants` for a list of accepted values for *clk_id*."
msgstr ""

#: ../../library/time.rst:184
msgid ""
"Set the time of the specified clock *clk_id*.  Currently, "
":data:`CLOCK_REALTIME` is the only accepted value for *clk_id*."
msgstr ""

#: ../../library/time.rst:194
msgid ""
"Convert a time expressed in seconds since the epoch to a string representing"
" local time. If *secs* is not provided or :const:`None`, the current time as"
" returned by :func:`.time` is used.  ``ctime(secs)`` is equivalent to "
"``asctime(localtime(secs))``. Locale information is not used by "
":func:`ctime`."
msgstr ""
"エポックからの経過秒数で表現された時刻を、ローカルの時刻を表現する文字列に変換します。*secs* を指定しないか :const:`None` "
"を指定した場合、:func:`.time` が返す値を現在の時刻として使用します。``ctime(secs)`` は "
"``asctime(localtime(secs))`` と等価です。ローカル情報は :func:`ctime` には使用されません。"

#: ../../library/time.rst:202
msgid ""
"Get information on the specified clock as a namespace object. Supported "
"clock names and the corresponding functions to read their value are:"
msgstr ""
"指定されたクロックの情報を名前空間オブジェクトとして取得します。サポートされているクロック名およびそれらの値を取得する関数は以下の通りです:"

#: ../../library/time.rst:206
msgid "``'clock'``: :func:`time.clock`"
msgstr "``'clock'``: :func:`time.clock`"

#: ../../library/time.rst:207
msgid "``'monotonic'``: :func:`time.monotonic`"
msgstr "``'monotonic'``: :func:`time.monotonic`"

#: ../../library/time.rst:208
msgid "``'perf_counter'``: :func:`time.perf_counter`"
msgstr "``'perf_counter'``: :func:`time.perf_counter`"

#: ../../library/time.rst:209
msgid "``'process_time'``: :func:`time.process_time`"
msgstr "``'process_time'``: :func:`time.process_time`"

#: ../../library/time.rst:210
msgid "``'time'``: :func:`time.time`"
msgstr "``'time'``: :func:`time.time`"

#: ../../library/time.rst:212
msgid "The result has the following attributes:"
msgstr "結果は以下の属性をもちます:"

#: ../../library/time.rst:214
msgid ""
"*adjustable*: ``True`` if the clock can be changed automatically (e.g. by a "
"NTP daemon) or manually by the system administrator, ``False`` otherwise"
msgstr ""
"*adjustable*: 自動 (NTP デーモンによるなど) またはシステム管理者による手動で変更できる場合は ``True``、それ以外の場合は "
"``False`` になります。"

#: ../../library/time.rst:216
msgid ""
"*implementation*: The name of the underlying C function used to get the "
"clock value.  Refer to :ref:`time-clock-id-constants` for possible values."
msgstr ""

#: ../../library/time.rst:218
msgid ""
"*monotonic*: ``True`` if the clock cannot go backward, ``False`` otherwise"
msgstr "*monotonic*: クロック値が後戻りすることがない場合 ``True`` が、そうでない場合は ``False`` になります。"

#: ../../library/time.rst:220
msgid "*resolution*: The resolution of the clock in seconds (:class:`float`)"
msgstr "*resolution*: クロックの分解能を秒 (:class:`float`) で表します。"

#: ../../library/time.rst:227
msgid ""
"Convert a time expressed in seconds since the epoch to a "
":class:`struct_time` in UTC in which the dst flag is always zero.  If *secs*"
" is not provided or :const:`None`, the current time as returned by "
":func:`.time` is used.  Fractions of a second are ignored.  See above for a "
"description of the :class:`struct_time` object. See :func:`calendar.timegm` "
"for the inverse of this function."
msgstr ""
"エポックからの経過時間で表現された時刻を、UTC で :class:`struct_time` に変換します。このとき dst "
"フラグは常にゼロとして扱われます。*secs* を指定しないか :const:`None` を指定した場合、:func:`.time` "
"が返す値を現在の時刻として使用します。秒の端数は無視されます。:class:`struct_time` "
"オブジェクトについては前述の説明を参照してください。:func:`calendar.timegm` はこの関数と逆の変換を行います。"

#: ../../library/time.rst:237
msgid ""
"Like :func:`gmtime` but converts to local time.  If *secs* is not provided "
"or :const:`None`, the current time as returned by :func:`.time` is used.  "
"The dst flag is set to ``1`` when DST applies to the given time."
msgstr ""
":func:`gmtime` に似ていますが、ローカル時間に変換します。*secs* を指定しないか :const:`None` "
"を指定した場合、:func:`.time` が返す値を現在の時刻として使用します。DST が適用されている場合は dst フラグには ``1`` "
"が設定されます。"

#: ../../library/time.rst:244
msgid ""
"This is the inverse function of :func:`localtime`.  Its argument is the "
":class:`struct_time` or full 9-tuple (since the dst flag is needed; use "
"``-1`` as the dst flag if it is unknown) which expresses the time in *local*"
" time, not UTC.  It returns a floating point number, for compatibility with "
":func:`.time`. If the input value cannot be represented as a valid time, "
"either :exc:`OverflowError` or :exc:`ValueError` will be raised (which "
"depends on whether the invalid value is caught by Python or the underlying C"
" libraries). The earliest date for which it can generate a time is platform-"
"dependent."
msgstr ""
":func:`localtime` の逆を行う関数です。引数は :class:`struct_time` か 9 個の要素すべての値を持つ完全なタプル "
"(dst フラグも必要です; 時刻に DST が適用されるか不明の場合は ``-1`` を使用してください) で、UTC ではなく *ローカル* "
"時間を指定します。戻り値は :func:`.time` との互換性のために浮動小数点数になります。入力した値を正しい時刻として表現できない場合、例外 "
":exc:`OverflowError` または :exc:`ValueError` が送出されます (どちらが送出されるかは、無効な値を受け取ったのが"
" Python と下層の C ライブラリのどちらなのかによって決まります)。この関数で時刻を生成できる最も古い日付はプラットフォームに依存します。"

#: ../../library/time.rst:256
msgid ""
"Return the value (in fractional seconds) of a monotonic clock, i.e. a clock "
"that cannot go backwards.  The clock is not affected by system clock "
"updates. The reference point of the returned value is undefined, so that "
"only the difference between the results of consecutive calls is valid."
msgstr ""
"モノトニッククロックの値 (小数点以下がミリ秒) "
"を返します。戻り値の基準点は定義されていませんが、このクロックは値が後戻りすることはなく、システムクロックの更新の影響も受けません。すなわち、モノトニック時間の重要な点はその値ではなく、値が厳密に増加していくことが保証されている点です。このため、正しい利用法は、呼び出した"
" 2 点間の時間差を計測することです。"

#: ../../library/time.rst:261
msgid ""
"On Windows versions older than Vista, :func:`monotonic` detects "
":c:func:`GetTickCount` integer overflow (32 bits, roll-over after 49.7 "
"days). It increases an internal epoch (reference time) by 2\\ :sup:`32` each"
" time that an overflow is detected.  The epoch is stored in the process-"
"local state and so the value of :func:`monotonic` may be different in two "
"Python processes running for more than 49 days. On more recent versions of "
"Windows and on other operating systems, :func:`monotonic` is system-wide."
msgstr ""
"Vista より古いバージョンの Windows では、:func:`monotonic` は :c:func:`GetTickCount` "
"の整数オーバーフロー (32 bits, 連続稼働で 49.7 日後) を検出します。これは内部エポック (参照時刻) を、オーバーフローを検出する "
"2\\ :sup:`32` 毎に増加させます。エポックは各プロセスのローカル内に保存されるため、:func:`monotonic` の値は、49 "
"日以上動作させている 2 つの Python プロセス間では異なる場合があります。これより新しいバージョンの Windows "
"およびその他のオペレーティングシステムでは、:func:`monotonic` はシステム全体で一意です。"

#: ../../library/time.rst:270
msgid "The function is now always available."
msgstr "常に利用出来るようになりました。"

#: ../../library/time.rst:276
msgid ""
"Return the value (in fractional seconds) of a performance counter, i.e. a "
"clock with the highest available resolution to measure a short duration.  It"
" does include time elapsed during sleep and is system-wide.  The reference "
"point of the returned value is undefined, so that only the difference "
"between the results of consecutive calls is valid."
msgstr ""
"パフォーマンスカウンターの値 (小数点以下がミリ秒) "
"を返します。クロックは短期間の計測が行えるよう、可能な限り高い分解能をもちます。これにはスリープ中の経過時間も含まれ、システム全体で一意です。"

#: ../../library/time.rst:287
msgid ""
"Return the value (in fractional seconds) of the sum of the system and user "
"CPU time of the current process.  It does not include time elapsed during "
"sleep.  It is process-wide by definition.  The reference point of the "
"returned value is undefined, so that only the difference between the results"
" of consecutive calls is valid."
msgstr ""
"現在のプロセスのシステムおよびユーザー CPU 時間の合計値 (小数点以下はミリ秒) "
"を返します。プロセスごとに定義され、スリープ中の経過時間は含まれません。戻り値の参照点は定義されていないため、正しい利用法は、呼び出した 2 "
"点間の時間差を計測することです。"

#: ../../library/time.rst:297
msgid ""
"Suspend execution of the calling thread for the given number of seconds. The"
" argument may be a floating point number to indicate a more precise sleep "
"time. The actual suspension time may be less than that requested because any"
" caught signal will terminate the :func:`sleep` following execution of that "
"signal's catching routine.  Also, the suspension time may be longer than "
"requested by an arbitrary amount because of the scheduling of other activity"
" in the system."
msgstr ""
"与えられた秒数の間、呼び出したスレッドの実行を停止します。より精度の高い実行停止時間を指定するために、引数は浮動小数点にしてもかまいません。何らかのシステムシグナルがキャッチされた場合、それに続いてシグナル処理ルーチンが実行され、:func:`sleep`"
" "
"を停止します。従って実際の実行停止時間は要求した時間よりも短くなるかもしれません。また、システムが他の処理をスケジュールするために、実行停止時間が要求した時間よりも多少長い時間になることもあります。"

#: ../../library/time.rst:305
msgid ""
"The function now sleeps at least *secs* even if the sleep is interrupted by "
"a signal, except if the signal handler raises an exception (see :pep:`475` "
"for the rationale)."
msgstr ""
"スリープがシグナルに中断されてもシグナルハンドラが例外を送出しない限り、少なくとも *secs* だけスリープするようになりました (論拠については "
":pep:`475` を参照してください)。"

#: ../../library/time.rst:313
msgid ""
"Convert a tuple or :class:`struct_time` representing a time as returned by "
":func:`gmtime` or :func:`localtime` to a string as specified by the *format*"
" argument.  If *t* is not provided, the current time as returned by "
":func:`localtime` is used.  *format* must be a string.  :exc:`ValueError` is"
" raised if any field in *t* is outside of the allowed range."
msgstr ""
":func:`gmtime` や :func:`localtime` が返す時刻値タプルまたは :class:`struct_time` "
"を、*format* で指定した文字列形式に変換します。*t* が与えられていない場合、:func:`localtime` "
"が返す値を現在の時刻として使用します。*format* は文字列でなくてはなりません。*t* "
"のいずれかのフィールドが許容範囲外の数値であった場合、:exc:`ValueError` を送出します。"

#: ../../library/time.rst:319
msgid ""
"0 is a legal argument for any position in the time tuple; if it is normally "
"illegal the value is forced to a correct one."
msgstr "0 は時刻タプル内のいずれの位置の引数にも使用できます; それが一般に不正な値であれば、正しい値に強制的に置き換えられます。"

#: ../../library/time.rst:322
msgid ""
"The following directives can be embedded in the *format* string. They are "
"shown without the optional field width and precision specification, and are "
"replaced by the indicated characters in the :func:`strftime` result:"
msgstr ""
"*format* 文字列には以下のディレクティブ (指示語) "
"を埋め込むことができます。これらはフィールド長や精度のオプションを付けずに表され、:func:`strftime` "
"の結果の対応する文字列に置き換えられます:"

#: ../../library/time.rst:327
msgid "Directive"
msgstr "ディレクティブ"

#: ../../library/time.rst:327
msgid "Meaning"
msgstr "意味"

#: ../../library/time.rst:327
msgid "Notes"
msgstr "注釈"

#: ../../library/time.rst:329
msgid "``%a``"
msgstr "``%a``"

#: ../../library/time.rst:329
msgid "Locale's abbreviated weekday name."
msgstr "ロケールの短縮された曜日名になります。"

#: ../../library/time.rst:332
msgid "``%A``"
msgstr "``%A``"

#: ../../library/time.rst:332
msgid "Locale's full weekday name."
msgstr "ロケールの曜日名になります。"

#: ../../library/time.rst:334
msgid "``%b``"
msgstr "``%b``"

#: ../../library/time.rst:334
msgid "Locale's abbreviated month name."
msgstr "ロケールの短縮された月名になります。"

#: ../../library/time.rst:337
msgid "``%B``"
msgstr "``%B``"

#: ../../library/time.rst:337
msgid "Locale's full month name."
msgstr "ロケールの月名になります。"

#: ../../library/time.rst:339
msgid "``%c``"
msgstr "``%c``"

#: ../../library/time.rst:339
msgid "Locale's appropriate date and time representation."
msgstr "ロケールの日時を適切な形式で表します。"

#: ../../library/time.rst:342
msgid "``%d``"
msgstr "``%d``"

#: ../../library/time.rst:342
msgid "Day of the month as a decimal number [01,31]."
msgstr "月中の日にちの 10 進表記になります [01,31]。"

#: ../../library/time.rst:345
msgid "``%H``"
msgstr "``%H``"

#: ../../library/time.rst:345
msgid "Hour (24-hour clock) as a decimal number [00,23]."
msgstr "時 (24 時間表記) の 10 進表記になります [00,23]。"

#: ../../library/time.rst:348
msgid "``%I``"
msgstr "``%I``"

#: ../../library/time.rst:348
msgid "Hour (12-hour clock) as a decimal number [01,12]."
msgstr "時 (12 時間表記) の 10 進表記になります [01,12]。"

#: ../../library/time.rst:351
msgid "``%j``"
msgstr "``%j``"

#: ../../library/time.rst:351
msgid "Day of the year as a decimal number [001,366]."
msgstr "年中の日にちの 10 進表記になります [001,366]。"

#: ../../library/time.rst:354
msgid "``%m``"
msgstr "``%m``"

#: ../../library/time.rst:354
msgid "Month as a decimal number [01,12]."
msgstr "月の 10 進表記になります [01,12]。"

#: ../../library/time.rst:357
msgid "``%M``"
msgstr "``%M``"

#: ../../library/time.rst:357
msgid "Minute as a decimal number [00,59]."
msgstr "分の 10 進表記になります [00,59]。"

#: ../../library/time.rst:360
msgid "``%p``"
msgstr "``%p``"

#: ../../library/time.rst:360
msgid "Locale's equivalent of either AM or PM."
msgstr "ロケールの AM もしくは PM と等価な文字列になります。"

#: ../../library/time.rst:360
msgid "\\(1)"
msgstr "\\(1)"

#: ../../library/time.rst:363
msgid "``%S``"
msgstr "``%S``"

#: ../../library/time.rst:363
msgid "Second as a decimal number [00,61]."
msgstr "秒の 10 進表記になります [00,61]。"

#: ../../library/time.rst:363
msgid "\\(2)"
msgstr "\\(2)"

#: ../../library/time.rst:366
msgid "``%U``"
msgstr "``%U``"

#: ../../library/time.rst:366
msgid ""
"Week number of the year (Sunday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Sunday are "
"considered to be in week 0."
msgstr ""
"年の初めから何週目か (日曜を週の始まりとします) を表す 10 進数になります [00,53]。年が明けてから最初の日曜日までのすべての曜日は 0 "
"週目に属すると見なされます。"

#: ../../library/time.rst:366 ../../library/time.rst:377
msgid "\\(3)"
msgstr "\\(3)"

#: ../../library/time.rst:374
msgid "``%w``"
msgstr "``%w``"

#: ../../library/time.rst:374
msgid "Weekday as a decimal number [0(Sunday),6]."
msgstr "曜日の 10 進表記になります [0 (日曜日),6]。"

#: ../../library/time.rst:377
msgid "``%W``"
msgstr "``%W``"

#: ../../library/time.rst:377
msgid ""
"Week number of the year (Monday as the first day of the week) as a decimal "
"number [00,53]. All days in a new year preceding the first Monday are "
"considered to be in week 0."
msgstr ""
"年の初めから何週目か (月曜を週の始まりとします) を表す 10 進数になります [00,53]。年が明けてから最初の月曜日までの全ての曜日は 0 "
"週目に属すると見なされます。"

#: ../../library/time.rst:385
msgid "``%x``"
msgstr "``%x``"

#: ../../library/time.rst:385
msgid "Locale's appropriate date representation."
msgstr "ロケールの日付を適切な形式で表します。"

#: ../../library/time.rst:388
msgid "``%X``"
msgstr "``%X``"

#: ../../library/time.rst:388
msgid "Locale's appropriate time representation."
msgstr "ロケールの時間を適切な形式で表します。"

#: ../../library/time.rst:391
msgid "``%y``"
msgstr "``%y``"

#: ../../library/time.rst:391
msgid "Year without century as a decimal number [00,99]."
msgstr "西暦の下 2 桁の 10 進表記になります [00,99]。"

#: ../../library/time.rst:394
msgid "``%Y``"
msgstr "``%Y``"

#: ../../library/time.rst:394
msgid "Year with century as a decimal number."
msgstr "西暦 ( 4桁) の 10 進表記を表します。"

#: ../../library/time.rst:397
msgid "``%z``"
msgstr "``%z``"

#: ../../library/time.rst:397
msgid ""
"Time zone offset indicating a positive or negative time difference from "
"UTC/GMT of the form +HHMM or -HHMM, where H represents decimal hour digits "
"and M represents decimal minute digits [-23:59, +23:59]."
msgstr ""
"タイムゾーンと UTC/GMT との時差を表す正または負の時間を +HHMM、-HHMM で表します。H は時間の、M は分の 10 進表記になります "
"[-23:59, +23:59]。"

#: ../../library/time.rst:403
msgid "``%Z``"
msgstr "``%Z``"

#: ../../library/time.rst:403
msgid "Time zone name (no characters if no time zone exists)."
msgstr "タイムゾーンの名前を表します (タイムゾーンがない場合には空文字列)。"

#: ../../library/time.rst:406
msgid "``%%``"
msgstr "``%%``"

#: ../../library/time.rst:406
msgid "A literal ``'%'`` character."
msgstr "文字 ``'%'`` を表します。"

#: ../../library/time.rst:409
msgid "Notes:"
msgstr "注釈:"

#: ../../library/time.rst:412
msgid ""
"When used with the :func:`strptime` function, the ``%p`` directive only "
"affects the output hour field if the ``%I`` directive is used to parse the "
"hour."
msgstr ""
":func:`strptime` 関数で使う場合、``%p`` ディレクティブが出力結果の時刻フィールドに影響を及ぼすのは、時刻を解釈するために "
"``%I`` を使ったときのみです。"

#: ../../library/time.rst:416
msgid ""
"The range really is ``0`` to ``61``; value ``60`` is valid in timestamps "
"representing `leap seconds`_ and value ``61`` is supported for historical "
"reasons."
msgstr ""
"値の幅は実際に ``0`` から ``61`` です; ``60`` は `うるう秒<leap seconds>`_ を表し、 ``61`` "
"は歴史的理由によりサポートされています。"

#: ../../library/time.rst:421
msgid ""
"When used with the :func:`strptime` function, ``%U`` and ``%W`` are only "
"used in calculations when the day of the week and the year are specified."
msgstr ":func:`strptime` 関数で使う場合、``%U`` および ``%W`` を計算に使うのは曜日と年を指定したときだけです。"

#: ../../library/time.rst:424
msgid ""
"Here is an example, a format for dates compatible with that specified  in "
"the :rfc:`2822` Internet email standard.  [#]_ ::"
msgstr "以下に :rfc:`2822` インターネット電子メール標準で定義されている日付表現と互換の書式の例を示します。  [#]_ ::"

#: ../../library/time.rst:431
msgid ""
"Additional directives may be supported on certain platforms, but only the "
"ones listed here have a meaning standardized by ANSI C.  To see the full set"
" of format codes supported on your platform, consult the "
":manpage:`strftime(3)` documentation."
msgstr ""
"一部のプラットフォームではさらにいくつかのディレクティブがサポートされていますが、標準 ANSI C "
"で意味のある値はここで列挙したものだけです。あなたのプラットフォームでサポートされている書式コードの全一覧については、:manpage:`strftime(3)`"
" のドキュメントを参照してください。"

#: ../../library/time.rst:436
msgid ""
"On some platforms, an optional field width and precision specification can "
"immediately follow the initial ``'%'`` of a directive in the following "
"order; this is also not portable. The field width is normally 2 except for "
"``%j`` where it is 3."
msgstr ""
"一部のプラットフォームでは、フィールドの幅や精度を指定するオプションがディレクティブの先頭の文字 ``'%'`` "
"の直後に付けられるようになっていました; この機能も移植性はありません。フィールドの幅は通常 2 ですが、``%j`` は例外で 3 です。"

#: ../../library/time.rst:444
msgid ""
"Parse a string representing a time according to a format.  The return value "
"is a :class:`struct_time` as returned by :func:`gmtime` or "
":func:`localtime`."
msgstr ""
"時刻を表現する文字列を書式に従って解釈します。返される値は :func:`gmtime` や :func:`localtime` が返すような "
":class:`struct_time` です。"

#: ../../library/time.rst:448
msgid ""
"The *format* parameter uses the same directives as those used by "
":func:`strftime`; it defaults to ``\"%a %b %d %H:%M:%S %Y\"`` which matches "
"the formatting returned by :func:`ctime`. If *string* cannot be parsed "
"according to *format*, or if it has excess data after parsing, "
":exc:`ValueError` is raised. The default values used to fill in any missing "
"data when more accurate values cannot be inferred are ``(1900, 1, 1, 0, 0, "
"0, 0, 1, -1)``. Both *string* and *format* must be strings."
msgstr ""
"*format* パラメーターは :func:`strftime` で使うものと同じディレクティブを使います; このパラメーターの値はデフォルトでは "
"``\"%a %b %d %H:%M:%S %Y\"`` で、:func:`ctime` が返すフォーマットに一致します。*string* が "
"*format* に従って解釈できなかった場合、例外 :exc:`ValueError` が送出されます。解析しようとする *string* "
"が解析後に余分なデータを持っていた場合、:exc:`ValueError` "
"が送出されます。欠落したデータについて、適切な値を推測できない場合はデフォルトの値で埋められ、その値は ``(1900, 1, 1, 0, 0, 0, "
"0, 1, -1)`` です。*string* も *format* も文字列でなければなりません。"

#: ../../library/time.rst:456
msgid "For example:"
msgstr "例えば:"

#: ../../library/time.rst:463
msgid ""
"Support for the ``%Z`` directive is based on the values contained in "
"``tzname`` and whether ``daylight`` is true.  Because of this, it is "
"platform-specific except for recognizing UTC and GMT which are always known "
"(and are considered to be non-daylight savings timezones)."
msgstr ""
"``%Z`` ディレクティブへのサポートは ``tzname`` に収められている値と ``daylight`` "
"が真かどうかで決められます。このため、常に既知の (かつ夏時間でないと考えられている) UTC や GMT "
"を認識する時以外はプラットフォーム固有の動作になります。"

#: ../../library/time.rst:468
msgid ""
"Only the directives specified in the documentation are supported.  Because "
"``strftime()`` is implemented per platform it can sometimes offer more "
"directives than those listed.  But ``strptime()`` is independent of any "
"platform and thus does not necessarily support all directives available that"
" are not documented as supported."
msgstr ""
"ドキュメント内で説明されているディレクティブだけがサポートされています。``strftime()`` "
"はプラットフォームごとに実装されているので、説明されていないディレクティブも利用できるかもしれません。しかし、``strptime()`` "
"はプラットフォーム非依存なので、ドキュメント内でサポートされているとされているディレクティブ以外は利用できません。"

#: ../../library/time.rst:477
msgid ""
"The type of the time value sequence returned by :func:`gmtime`, "
":func:`localtime`, and :func:`strptime`.  It is an object with a "
":term:`named tuple` interface: values can be accessed by index and by "
"attribute name.  The following values are present:"
msgstr ""
":func:`gmtime`, :func:`localtime` および :func:`strptime` "
"が返す時刻値シーケンスの型です。これは名前付きタプル (:term:`named tuple`) "
"のインタフェースをもったオブジェクトです。値はインデックスでも属性名でもアクセス可能です。以下の値があります:"

#: ../../library/time.rst:483
msgid "Index"
msgstr "インデックス"

#: ../../library/time.rst:483
msgid "Attribute"
msgstr "属性"

#: ../../library/time.rst:483
msgid "Values"
msgstr "値"

#: ../../library/time.rst:485
msgid "0"
msgstr "0"

#: ../../library/time.rst:485
msgid ":attr:`tm_year`"
msgstr ":attr:`tm_year`"

#: ../../library/time.rst:485
msgid "(for example, 1993)"
msgstr "(例えば 1993)"

#: ../../library/time.rst:487
msgid "1"
msgstr "1"

#: ../../library/time.rst:487
msgid ":attr:`tm_mon`"
msgstr ":attr:`tm_mon`"

#: ../../library/time.rst:487
msgid "range [1, 12]"
msgstr "[1,12] の間の数"

#: ../../library/time.rst:489
msgid "2"
msgstr "2"

#: ../../library/time.rst:489
msgid ":attr:`tm_mday`"
msgstr ":attr:`tm_mday`"

#: ../../library/time.rst:489
msgid "range [1, 31]"
msgstr "[1,31] の間の数"

#: ../../library/time.rst:491
msgid "3"
msgstr "3"

#: ../../library/time.rst:491
msgid ":attr:`tm_hour`"
msgstr ":attr:`tm_hour`"

#: ../../library/time.rst:491
msgid "range [0, 23]"
msgstr "[0,23] の間の数"

#: ../../library/time.rst:493
msgid "4"
msgstr "4"

#: ../../library/time.rst:493
msgid ":attr:`tm_min`"
msgstr ":attr:`tm_min`"

#: ../../library/time.rst:493
msgid "range [0, 59]"
msgstr "[0,59] の間の数"

#: ../../library/time.rst:495
msgid "5"
msgstr "5"

#: ../../library/time.rst:495
msgid ":attr:`tm_sec`"
msgstr ":attr:`tm_sec`"

#: ../../library/time.rst:495
msgid "range [0, 61]; see **(2)** in :func:`strftime` description"
msgstr "[0,61] の間の数 :func:`strftime` の説明にある **(2)** を読んで下さい"

#: ../../library/time.rst:498
msgid "6"
msgstr "6"

#: ../../library/time.rst:498
msgid ":attr:`tm_wday`"
msgstr ":attr:`tm_wday`"

#: ../../library/time.rst:498
msgid "range [0, 6], Monday is 0"
msgstr "[0,6] の間の数、月曜が 0 になります"

#: ../../library/time.rst:500
msgid "7"
msgstr "7"

#: ../../library/time.rst:500
msgid ":attr:`tm_yday`"
msgstr ":attr:`tm_yday`"

#: ../../library/time.rst:500
msgid "range [1, 366]"
msgstr "[1,366] の間の数"

#: ../../library/time.rst:502
msgid "8"
msgstr "8"

#: ../../library/time.rst:502
msgid ":attr:`tm_isdst`"
msgstr ":attr:`tm_isdst`"

#: ../../library/time.rst:502
msgid "0, 1 or -1; see below"
msgstr "0, 1 または -1; 以下を参照してください"

#: ../../library/time.rst:504 ../../library/time.rst:506
msgid "N/A"
msgstr "N/A"

#: ../../library/time.rst:504
msgid ":attr:`tm_zone`"
msgstr ":attr:`tm_zone`"

#: ../../library/time.rst:504
msgid "abbreviation of timezone name"
msgstr "タイムゾーンの短縮名"

#: ../../library/time.rst:506
msgid ":attr:`tm_gmtoff`"
msgstr ":attr:`tm_gmtoff`"

#: ../../library/time.rst:506
msgid "offset east of UTC in seconds"
msgstr "UTC から東方向へのオフセット (秒)"

#: ../../library/time.rst:509
msgid ""
"Note that unlike the C structure, the month value is a range of [1, 12], not"
" [0, 11]."
msgstr "C の構造体とは異なり、月の値は [0, 11] ではなく [1, 12] であることに注意してください。"

#: ../../library/time.rst:512
msgid ""
"In calls to :func:`mktime`, :attr:`tm_isdst` may be set to 1 when daylight "
"savings time is in effect, and 0 when it is not.  A value of -1 indicates "
"that this is not known, and will usually result in the correct state being "
"filled in."
msgstr ""
":func:`mktime` の呼び出し時に、:attr:`tm_isdst` は夏時間が有効な場合は 1、そうでない場合は 0 に設定されることがあります。\n"
"値が -1 の場合は夏時間について不明なことを表していて、普通 :attr:`tm_isdst` は正しい状態に設定されます。"

#: ../../library/time.rst:516
msgid ""
"When a tuple with an incorrect length is passed to a function expecting a "
":class:`struct_time`, or having elements of the wrong type, a "
":exc:`TypeError` is raised."
msgstr ""
":class:`struct_time` を引数とする関数に正しくない長さの :class:`struct_time` や要素の型が正しくない "
":class:`struct_time` を与えた場合には、 :exc:`TypeError` が送出されます。"

#: ../../library/time.rst:522
msgid ""
"Return the time in seconds since the epoch_ as a floating point number. The "
"specific date of the epoch and the handling of `leap seconds`_ is platform "
"dependent. On Windows and most Unix systems, the epoch is January 1, 1970, "
"00:00:00 (UTC) and leap seconds are not counted towards the time in seconds "
"since the epoch. This is commonly referred to as `Unix time "
"<https://en.wikipedia.org/wiki/Unix_time>`_. To find out what the epoch is "
"on a given platform, look at ``gmtime(0)``."
msgstr ""
"`エポック <epoch>`_ からの秒数を浮動小数点数で返します。\n"
"エポックの具体的な日付とうるう秒 (`leap seconds`_) の扱いはプラットフォーム依存です。\n"
"Windows とほとんどの Unix システムでは、エポックは (UTC で) 1970 年 1 月 1 日 0 時 0 分 0 秒で、うるう秒はエポック秒の時間の勘定には入りません。\n"
"これは一般に `Unix 時間 <https://en.wikipedia.org/wiki/Unix_time>`_ と呼ばれています。\n"
"与えられたプラットフォームでエポックが何なのかを知るには、 time.gmtime(0) の値を見てください。"

#: ../../library/time.rst:532
msgid ""
"Note that even though the time is always returned as a floating point "
"number, not all systems provide time with a better precision than 1 second. "
"While this function normally returns non-decreasing values, it can return a "
"lower value than a previous call if the system clock has been set back "
"between the two calls."
msgstr ""
"時刻は常に浮動小数点数で返されますが、すべてのシステムが 1 秒より高い精度で時刻を提供するとは限らないので注意してください。\n"
"この関数が返す値は通常減少していくことはありませんが、この関数を 2 回呼び出し、その呼び出しの間にシステムクロックの時刻を巻き戻して設定した場合には、以前の呼び出しよりも低い値が返ることがあります。"

#: ../../library/time.rst:538
msgid ""
"The number returned by :func:`.time` may be converted into a more common "
"time format (i.e. year, month, day, hour, etc...) in UTC by passing it to "
":func:`gmtime` function or in local time by passing it to the "
":func:`localtime` function. In both cases a :class:`struct_time` object is "
"returned, from which the components of the calendar date may be accessed as "
"attributes."
msgstr ""
":func:`.time` が返す数値は、 :func:`gmtime` 関数に渡されて UTC の、あるいは :func:`localtime` 関数に渡されて現地時間の、より一般的な時間のフォーマット (つまり、年、月、日、時間など) に変換されているかもしれません。\n"
"どちらの場合でも :class:`struct_time` オブジェクトが返され、このオブジェクトの属性としてカレンダー日付の構成要素へアクセスできます。"

#: ../../library/time.rst:548
msgid ""
"Resets the time conversion rules used by the library routines. The "
"environment variable :envvar:`TZ` specifies how this is done."
msgstr "ライブラリで使われている時刻変換規則をリセットします。どのように行われるかは、環境変数 :envvar:`TZ` で指定されます。"

#: ../../library/time.rst:555
msgid ""
"Although in many cases, changing the :envvar:`TZ` environment variable may "
"affect the output of functions like :func:`localtime` without calling "
":func:`tzset`, this behavior should not be relied on."
msgstr ""
"多くの場合、環境変数 :envvar:`TZ` を変更すると、 :func:`tzset` を呼ばない限り :func:`localtime` "
"のような関数の出力に影響を及ぼすため、値が信頼できなくなってしまいます。"

#: ../../library/time.rst:559
msgid "The :envvar:`TZ` environment variable should contain no whitespace."
msgstr ":envvar:`TZ` 環境変数には空白文字を含めてはなりません。"

#: ../../library/time.rst:561
msgid ""
"The standard format of the :envvar:`TZ` environment variable is (whitespace "
"added for clarity)::"
msgstr "環境変数 :envvar:`TZ` の標準的な書式は以下の通りです (分かりやすいように空白を入れています)::"

#: ../../library/time.rst:566
msgid "Where the components are:"
msgstr "各値は以下のようになっています:"

#: ../../library/time.rst:570
msgid "``std`` and ``dst``"
msgstr "``std`` と ``dst``"

#: ../../library/time.rst:569
msgid ""
"Three or more alphanumerics giving the timezone abbreviations. These will be"
" propagated into time.tzname"
msgstr "三文字またはそれ以上の英数字で、タイムゾーンの略称を与えます。この値は time.tzname になります。"

#: ../../library/time.rst:576
msgid "``offset``"
msgstr "``offset``"

#: ../../library/time.rst:573
msgid ""
"The offset has the form: ``± hh[:mm[:ss]]``. This indicates the value added "
"the local time to arrive at UTC.  If preceded by a '-', the timezone is east"
" of the Prime Meridian; otherwise, it is west. If no offset follows dst, "
"summer time is assumed to be one hour ahead of standard time."
msgstr ""
"オフセットは形式: ``± hh[:mm[:ss]]`` をとります。この表現は、UTC "
"時刻にするためにローカルな時間に加算する必要のある時間値を示します。'-' が先頭につく場合、そのタイムゾーンは本初子午線 (Prime "
"Meridian) より東側にあります。それ以外の場合は本初子午線の西側です。オフセットが dst "
"の後ろに続かない場合、夏時間は標準時より一時間先行しているものと仮定します。"

#: ../../library/time.rst:598
msgid "``start[/time], end[/time]``"
msgstr "``start[/time], end[/time]``"

#: ../../library/time.rst:579
msgid ""
"Indicates when to change to and back from DST. The format of the start and "
"end dates are one of the following:"
msgstr "いつ DST に移動し、DST から戻ってくるかを示します。開始および終了日時の形式は以下のいずれかです:"

#: ../../library/time.rst:584
msgid ":samp:`J{n}`"
msgstr ":samp:`J{n}`"

#: ../../library/time.rst:583
msgid ""
"The Julian day *n* (1 <= *n* <= 365). Leap days are not counted, so in all "
"years February 28 is day 59 and March 1 is day 60."
msgstr ""
"ユリウス日 (Julian day) *n* (1 <= *n* <= 365) を表します。うるう日は計算に含められないため、2 月 28 日は常に "
"59 で、3 月 1 日は 60 になります。"

#: ../../library/time.rst:588
msgid ":samp:`{n}`"
msgstr ":samp:`{n}`"

#: ../../library/time.rst:587
msgid ""
"The zero-based Julian day (0 <= *n* <= 365). Leap days are counted, and it "
"is possible to refer to February 29."
msgstr ""
"ゼロから始まるユリウス日 (0 <= *n* <= 365) です。うるう日は計算に含められるため、2 月 29 日を参照することができます。"

#: ../../library/time.rst:595
msgid ":samp:`M{m}.{n}.{d}`"
msgstr ":samp:`M{m}.{n}.{d}`"

#: ../../library/time.rst:591
msgid ""
"The *d*'th day (0 <= *d* <= 6) of week *n* of month *m* of the year (1 <= "
"*n* <= 5, 1 <= *m* <= 12, where week 5 means \"the last *d* day in month "
"*m*\" which may occur in either the fourth or the fifth week). Week 1 is the"
" first week in which the *d*'th day occurs. Day zero is a Sunday."
msgstr ""
"*m* 月の週 *n* における *d* 番目の日 (0 <= *d* <= 6, 1 <= *n* <= 5, 1 <= *m* <= 12) "
"を表します。週 5 は月 *m* における最終週の *d* 番目の日を表し、第 4 週か第 5 週のどちらかになります。週 1 は日 *d* "
"が最初に現れる日を指します。日 0 は日曜日です。"

#: ../../library/time.rst:597
msgid ""
"``time`` has the same format as ``offset`` except that no leading sign ('-' "
"or '+') is allowed. The default, if time is not given, is 02:00:00."
msgstr ""
"``time`` は ``offset`` とほぼ同じで、先頭に符号 ('-' や '+') "
"を付けてはいけないところだけが違います。時刻が指定されていなければ、デフォルトの値 02:00:00 になります。"

#: ../../library/time.rst:611
msgid ""
"On many Unix systems (including \\*BSD, Linux, Solaris, and Darwin), it is "
"more convenient to use the system's zoneinfo (:manpage:`tzfile(5)`)  "
"database to specify the timezone rules. To do this, set the  :envvar:`TZ` "
"environment variable to the path of the required timezone  datafile, "
"relative to the root of the systems 'zoneinfo' timezone database, usually "
"located at :file:`/usr/share/zoneinfo`. For example,  ``'US/Eastern'``, "
"``'Australia/Melbourne'``, ``'Egypt'`` or  ``'Europe/Amsterdam'``. ::"
msgstr ""
"多くの Unix システム (\\*BSD, Linux, Solaris, および Darwin を含む) では、システムの zoneinfo "
"(:manpage:`tzfile(5)`) "
"データベースを使ったほうが、タイムゾーンごとの規則を指定する上で便利です。これを行うには、必要なタイムゾーンデータファイルへのパスをシステムの "
"'zoneinfo' タイムゾーンデータベースからの相対で表した値を環境変数 :envvar:`TZ` に設定します。システムの 'zoneinfo' "
"は通常 :file:`/usr/share/zoneinfo` にあります。例えば、 ``'US/Eastern'`` 、 "
"``'Australia/Melbourne'`` 、 ``'Egypt'``  ないし ``'Europe/Amsterdam'`` と指定します。 "
"::"

#: ../../library/time.rst:632
msgid "Clock ID Constants"
msgstr ""

#: ../../library/time.rst:634
msgid ""
"These constants are used as parameters for :func:`clock_getres` and "
":func:`clock_gettime`."
msgstr ""

#: ../../library/time.rst:639
msgid ""
"The Solaris OS has a ``CLOCK_HIGHRES`` timer that attempts to use an optimal"
" hardware source, and may give close to nanosecond resolution. "
"``CLOCK_HIGHRES`` is the nonadjustable, high-resolution clock."
msgstr ""

#: ../../library/time.rst:643
msgid "Availability: Solaris."
msgstr "利用できる環境: Solaris"

#: ../../library/time.rst:650
msgid ""
"Clock that cannot be set and represents monotonic time since some "
"unspecified starting point."
msgstr "設定不可で、モノトニック時刻 (不特定のエポックからの単調増加な時刻) を表します。"

#: ../../library/time.rst:660
msgid ""
"Similar to :data:`CLOCK_MONOTONIC`, but provides access to a raw hardware-"
"based time that is not subject to NTP adjustments."
msgstr ""
":data:`CLOCK_MONOTONIC` と似ていますが、NTP の影響を受けていない、ハードウェアベースの時刻へのアクセスを提供します。"

#: ../../library/time.rst:663
msgid "Availability: Linux 2.6.28 or later."
msgstr "利用できる環境: Linux 2.6.28 以降"

#: ../../library/time.rst:670
msgid "High-resolution per-process timer from the CPU."
msgstr "CPU による高分解能のプロセスごとのタイマーです。"

#: ../../library/time.rst:679
msgid "Thread-specific CPU-time clock."
msgstr "スレッド固有の CPU タイムクロックです。"

#: ../../library/time.rst:686
msgid ""
"The following constant is the only parameter that can be sent to "
":func:`clock_settime`."
msgstr ""

#: ../../library/time.rst:691
msgid ""
"System-wide real-time clock.  Setting this clock requires appropriate "
"privileges."
msgstr "システム全体のリアルタイムクロックです。このクロックを設定するには適切な権限が必要です。"

#: ../../library/time.rst:702
msgid "Timezone Constants"
msgstr ""

#: ../../library/time.rst:706
msgid ""
"The offset of the local DST timezone, in seconds west of UTC, if one is "
"defined. This is negative if the local DST timezone is east of UTC (as in "
"Western Europe, including the UK).  Only use this if ``daylight`` is "
"nonzero.  See note below."
msgstr ""

#: ../../library/time.rst:712
msgid "Nonzero if a DST timezone is defined.  See note below."
msgstr ""

#: ../../library/time.rst:716
msgid ""
"The offset of the local (non-DST) timezone, in seconds west of UTC (negative"
" in most of Western Europe, positive in the US, zero in the UK).  See note "
"below."
msgstr ""

#: ../../library/time.rst:721
msgid ""
"A tuple of two strings: the first is the name of the local non-DST timezone,"
" the second is the name of the local DST timezone.  If no DST timezone is "
"defined, the second string should not be used.  See note below."
msgstr ""

#: ../../library/time.rst:727
msgid ""
"For the above Timezone constants (:data:`altzone`, :data:`daylight`, "
":data:`timezone`, and :data:`tzname`), the value is determined by the "
"timezone rules in effect at module load time or the last time :func:`tzset` "
"is called and may be incorrect for times in the past.  It is recommended to "
"use the :attr:`tm_gmtoff` and :attr:`tm_zone` results from :func:`localtime`"
" to obtain timezone information."
msgstr ""

#: ../../library/time.rst:737
msgid "Module :mod:`datetime`"
msgstr ":mod:`datetime` モジュール"

#: ../../library/time.rst:737
msgid "More object-oriented interface to dates and times."
msgstr "日付と時刻に対する、よりオブジェクト指向のインタフェースです。"

#: ../../library/time.rst:741
msgid "Module :mod:`locale`"
msgstr ":mod:`locale` モジュール"

#: ../../library/time.rst:740
msgid ""
"Internationalization services.  The locale setting affects the "
"interpretation of many format specifiers in :func:`strftime` and "
":func:`strptime`."
msgstr ""
"国際化サービスです。ロケールの設定は :func:`strftime` および :func:`strptime` "
"の多くの書式指定子の解釈に影響を及ぼします。"

#: ../../library/time.rst:744
msgid "Module :mod:`calendar`"
msgstr ":mod:`calendar` モジュール"

#: ../../library/time.rst:744
msgid ""
"General calendar-related functions.   :func:`~calendar.timegm` is the "
"inverse of :func:`gmtime` from this module."
msgstr ""
"一般的なカレンダーに関する関数群です。:func:`~calendar.timegm` はこのモジュールの :func:`gmtime` "
"の逆を行う関数です。"

#: ../../library/time.rst:748
msgid "Footnotes"
msgstr "脚注"

#: ../../library/time.rst:749
msgid ""
"The use of ``%Z`` is now deprecated, but the ``%z`` escape that expands to "
"the preferred  hour/minute offset is not supported by all ANSI C libraries. "
"Also, a strict reading of the original 1982 :rfc:`822` standard calls for a "
"two-digit year (%y rather than %Y), but practice moved to 4-digit years long"
" before the year 2000.  After that, :rfc:`822` became obsolete and the "
"4-digit year has been first recommended by :rfc:`1123` and then mandated by "
":rfc:`2822`."
msgstr ""
"``%Z`` の使用は現在非推奨です。ただし、ここで実現したい時間および分オフセットへの展開を行ってくれる ``%z`` エスケープはすべての ANSI"
" C ライブラリでサポートされているわけではありません。また、1982 年に提出されたオリジナルの :rfc:`822` 標準では西暦の表現を 2 "
"桁とするよう要求している (%Y でなく%y ) ものの、実際には 2000 年になるだいぶ以前から 4 桁の西暦表現に移行しています。その後 "
":rfc:`822` は撤廃され、4 桁の西暦表現は :rfc:`1123` で初めて勧告され、:rfc:`2822` において義務付けられました。"
