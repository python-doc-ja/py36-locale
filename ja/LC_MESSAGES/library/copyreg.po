# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: cocoatomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/copyreg.rst:2
msgid ":mod:`copyreg` --- Register :mod:`pickle` support functions"
msgstr ":mod:`copyreg` --- :mod:`pickle` サポート関数を登録する"

#: ../../library/copyreg.rst:7
msgid "**Source code:** :source:`Lib/copyreg.py`"
msgstr "**ソースコード:** :source:`Lib/copyreg.py`"

#: ../../library/copyreg.rst:15
msgid ""
"The :mod:`copyreg` module offers a way to define functions used while "
"pickling specific objects.  The :mod:`pickle` and :mod:`copy` modules use "
"those functions when pickling/copying those objects.  The module provides "
"configuration information about object constructors which are not classes. "
"Such constructors may be factory functions or class instances."
msgstr ""
":mod:`copyreg` モジュールは、特定のオブジェクトを pickle する際に使われる関数を定義する手段を提供します。 "
":mod:`pickle` モジュールと :mod:`copy` モジュールは、オブジェクトを "
"pickle/コピーする場合にそれらの関数を使用します。このモジュールは、クラスでないオブジェクトコンストラクタに関する設定情報を提供します。そのようなコンストラクタは、ファクトリ関数か、クラスインスタンスかもしれません。"

#: ../../library/copyreg.rst:24
msgid ""
"Declares *object* to be a valid constructor.  If *object* is not callable "
"(and hence not valid as a constructor), raises :exc:`TypeError`."
msgstr ""
"*object* を有効なコンストラクタであると宣言します。 *object* "
"が呼び出し可能でなければ(したがってコンストラクタとして有効でなければ)、 :exc:`TypeError` を発生します。"

#: ../../library/copyreg.rst:30
msgid ""
"Declares that *function* should be used as a \"reduction\" function for "
"objects of type *type*.  *function* should return either a string or a tuple"
" containing two or three elements."
msgstr ""
"*function* が型 *type* のオブジェクトに対する\"リダクション\"関数として使われるように宣言します。*function* "
"は文字列か、2要素または3要素を含んだタプルを返さなければなりません。"

#: ../../library/copyreg.rst:34
msgid ""
"The optional *constructor* parameter, if provided, is a callable object "
"which can be used to reconstruct the object when called with the tuple of "
"arguments returned by *function* at pickling time.  :exc:`TypeError` will be"
" raised if *object* is a class or *constructor* is not callable."
msgstr ""
"オプションの *constructor* パラメータが与えられた場合、それは呼び出し可能オブジェクトで、 *function* "
"が返した引数のタプルとともに pickle 化時に呼ばれてオブジェクトを再構築するために使われます。 *object* がクラスの場合、または "
"*constructor* が呼び出し可能でない場合には :exc:`TypeError` が発生します。"

#: ../../library/copyreg.rst:39
msgid ""
"See the :mod:`pickle` module for more details on the interface expected of "
"*function* and *constructor*.  Note that the "
":attr:`~pickle.Pickler.dispatch_table` attribute of a pickler object or "
"subclass of :class:`pickle.Pickler` can also be used for declaring reduction"
" functions."
msgstr ""
"*function* と *constructor* に期待されるインタフェースについての詳細については :mod:`pickle` "
"モジュールを参照してください。 pickler オブジェクトまたは :class:`pickle.Pickler` のサブクラスの "
":attr:`~pickle.Pickler.dispatch_table` "
"属性を、リダクション関数の宣言のために使うこともできるということは覚えておいてください。"

#: ../../library/copyreg.rst:46
msgid "Example"
msgstr "使用例"

#: ../../library/copyreg.rst:48
msgid ""
"The example below would like to show how to register a pickle function and "
"how it will be used:"
msgstr "下記の例は、pickle 関数を登録する方法と、それがどのように使用されるかを示そうとしています:"
