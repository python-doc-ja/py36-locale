# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2018, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-01-05 15:01+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: cocoatomo, 2018\n"
"Language-Team: Japanese (https://www.transifex.com/python-doc/teams/5390/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/__main__.rst:3
msgid ":mod:`__main__` --- Top-level script environment"
msgstr ":mod:`__main__` --- トップレベルのスクリプト環境"

#: ../../library/__main__.rst:10
msgid ""
"``'__main__'`` is the name of the scope in which top-level code executes. A "
"module's __name__ is set equal to ``'__main__'`` when read from standard "
"input, a script, or from an interactive prompt."
msgstr ""
"``'__main__'`` "
"はトップレベルのコードが実行されるスコープの名前です。モジュールが、標準入力から読み込まれたとき、スクリプトとして実行されたとき、あるいはインタラクティブプロンプトのとき、__name__"
" には ``'__main__'`` が設定されます。"

#: ../../library/__main__.rst:14
msgid ""
"A module can discover whether or not it is running in the main scope by "
"checking its own ``__name__``, which allows a common idiom for conditionally"
" executing code in a module when it is run as a script or with ``python -m``"
" but not when it is imported::"
msgstr ""
"モジュールは、自身の ``__name__`` "
"をチェックすることでメインスコープで実行されているかどうかを確認できます。これはモジュールがスクリプトとして、あるいはインポートでなく ``python"
" -m`` で起動されたときに実行するコードの条件として使用できる一般的なイディオムです::"

#: ../../library/__main__.rst:23
msgid ""
"For a package, the same effect can be achieved by including a "
"``__main__.py`` module, the contents of which will be executed when the "
"module is run with ``-m``."
msgstr ""
"パッケージについては、``__main__.py`` モジュールを用意することで同じ効果を得られます。``__main__.py`` にモジュールが "
"``-m`` オプションで呼びだされたときに実行したいコードを書くことができます。"
